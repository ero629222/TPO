EXPLICACIÓN

Bootstrap de HISTORIA

, class="d-flex flex-column min-vh-100" se utiliza para definir un contenedor flexible que organiza su contenido en una columna y garantiza que tenga al menos el 100% de la altura del viewport. 

la clase "text-center mb-5" se usa para centrar el texto y otros elementos horizontalmente en un elemento HTML, y también para agregar un margen en la parte inferior del mismo.

*******************
La clase "row" se utiliza para definir una fila en el sistema de grid de Bootstrap. Las filas son contenedores horizontales que albergan columnas.

La clase "justify-content-center" se utiliza junto con la clase "row" para alinear las columnas horizontalmente en el centro de la fila. Esto hace que todas las columnas dentro de la fila se distribuyan equitativamente y se centren horizontalmente.

La clase "col-md-6" se utiliza para crear una columna dentro de la fila. En este caso, "col-md-6" indica que la columna ocupará 6 unidades de ancho en dispositivos medianos (md) y superiores. Esto significa que en dispositivos con un tamaño de pantalla igual o superior a "md" (mediano), la columna ocupará la mitad del ancho disponible en la fila, lo que ayuda a crear un diseño responsivo.

*******************
La clase "flex-grow-1" se utiliza para hacer que el elemento <main> crezca y ocupe todo el espacio disponible en la dirección del eje principal dentro de su contenedor padre. Esto es útil para hacer que el <main> ocupe toda la altura restante del contenedor, lo que puede ser especialmente útil en diseños con flexbox.

La clase "text-center" se utiliza para centrar el contenido de texto dentro del elemento <main>. Esto asegura que cualquier texto dentro del elemento <main> esté alineado horizontalmente en el centro.


La clase flex-grow-1 se refiere a una clase de Bootstrap que indica que el elemento debe crecer para ocupar todo el espacio disponible en la dirección de flexión dentro de su contenedor flex


Script 

Se define una función anónima que toma tres parámetros: d, s, e id. Esta función se ejecuta inmediatamente después de ser definida.
Se declaran dos variables locales js y fjs. fjs se asigna al primer elemento del documento (d) que coincida con la etiqueta especificada por el segundo parámetro (s), que suele ser 'script'. Esto se hace para obtener el primer script que se encuentra en el documento.
Se verifica si existe un elemento con el ID especificado por el tercer parámetro (id) en el documento. Si existe, la función termina aquí y no hace nada más.
Se crea un nuevo elemento HTML del tipo especificado por s (normalmente 'script'). Se asigna el ID especificado por id a este nuevo elemento.
Se establece la fuente del script creado (js) como el URL proporcionado. Este URL suele ser una fuente externa, en este caso, 'https://www.scorebat.com/embed/embed.js?v=arrv'.
Se inserta el nuevo script (js) antes del primer script (fjs) en el documento. Esto es comúnmente utilizado para cargar scripts externos antes de que la página esté completamente cargada.
Finalmente, se cierra la función anónima y se ejecuta pasando los argumentos correspondientes: document (el documento actual), 'script' (el tipo de elemento a crear) y 'scorebat-jssdk' (el ID del script). Esto carga el script externo proporcionado en el documento HTML.